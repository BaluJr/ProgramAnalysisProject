Program Analysis and Synthesis, Spring 2016, ETH Zurich

## Project: Deep Learning for Programs
We provide two scripts 'suggest.sh' and 'extract_histories.sh' that will be used to test your solution. You should update both scripts by following the instructions provided inside them and include them in your submission.

I just followed the basic project structure like downloaded from the PA site and added some more files:

A) Python code for history extraction:
extract_histories.py
State.py
HistoryCollection.py
suggest.py

B) Rubish bin for old code:
RemvedCode.py

C) Summary of the elements that might appear in histories:
AvailableElementsofAST.txt

D) Place for discussions:
discussions.




I CHANGED THE JS-CALLGRAPH CODE sothat it immediatly reads the input from the argument instead !!!!
So we avoid saving always another file when created by js_printer.

The change made: In asutils.js arround line 100 exchange the function buildAST by the following function:
    """ function buildAST(files) {
	source = files[0]
        var ast = {
            type: 'ProgramCollection',
            programs: [],
            attr: {}
        };
        //sources.forEach(function (source) {
            var prog = esprima.parse(source, { loc: true, range: true });
            prog.attr = { filename: "inputfile", sloc : sloc(source, "javascript").sloc};
            ast.programs.push(prog);
        //});
        init(ast);
        ast.attr.sloc = ast.programs
            .map(function(program){
                return program.attr.sloc;
            }).reduce(function(previous, current) {
            return previous + current;
        });
        return ast;
    } """
